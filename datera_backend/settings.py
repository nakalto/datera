"""
Django settings for datera_backend project.

Generated by 'django-admin startproject' using Django 5.2.5.
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Load environment variables from .env file in project root
load_dotenv()

# Build paths inside the project (BASE_DIR points to project root folder)
BASE_DIR = Path(__file__).resolve().parent.parent


# SECURITY WARNING: keep the secret key secret in production
SECRET_KEY = os.getenv("SECRET_KEY")

# Debug flag: True for development, False in production
DEBUG = os.getenv("DEBUG", "True").lower() == "true"

# Allowed hosts: list of domains/IPs Django can serve
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "127.0.0.1,localhost").split(",")


# Installed apps: all Django apps and third-party apps used by the project
INSTALLED_APPS = [
    'django.contrib.admin',              
    'django.contrib.auth',              
    'django.contrib.contenttypes',       
    'django.contrib.sessions',           
    'django.contrib.messages',           
    'django.contrib.staticfiles',        
    'rest_framework',                    # Django REST framework for APIs
    'corsheaders',                       # CORS support (frontend can call API)
    'accounts', 
    'profiles',
    'mediahub',
    'messaging',
    'discovery',

                         
]


# Middleware: hooks into request/response cycle for extra processing
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',          
    'django.middleware.security.SecurityMiddleware',  
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',      
    'django.middleware.csrf.CsrfViewMiddleware',      
    'django.contrib.auth.middleware.AuthenticationMiddleware', 
    'django.contrib.messages.middleware.MessageMiddleware',    
    'django.middleware.clickjacking.XFrameOptionsMiddleware',   
]


# Root URL configuration
ROOT_URLCONF = 'datera_backend.urls'


# Templates: config for Django templates and where they are located
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "frontend" / "templates"],   
        'APP_DIRS': True,                                
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',  
                'django.contrib.auth.context_processors.auth', 
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI entry point for deployment servers
WSGI_APPLICATION = 'datera_backend.wsgi.application'


# Database configuration
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',     # SQLite for dev, can switch later
        'NAME': BASE_DIR / 'db.sqlite3',            # database file in project root
    }
}


# Custom user model
AUTH_USER_MODEL = "accounts.User"


# Django REST framework config
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.SessionAuthentication"  # session-based auth
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny",  # open access (secure this in prod)
    ]
}


# Email backend config
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = os.getenv("EMAIL_HOST", "")
EMAIL_PORT = int(os.getenv("EMAIL_PORT", "587"))
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER", "")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD", "")
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL", "no-reply@datera.com")


# Static files (CSS, JS, images)
STATIC_URL = "/static/"
STATICFILES_DIRS = [BASE_DIR / "frontend" / "static"]   # static folder for dev
STATIC_ROOT = BASE_DIR / "staticfiles"                  # folder for collectstatic (prod)


# CORS settings: allow frontend to talk to backend
CORS_ALLOW_ALL_ORIGINS = True if DEBUG else False
CORS_ALLOWED_ORIGINS = os.getenv("CORS_ALLOWED_ORIGINS", "").split(",") if not DEBUG else []


# Basic security headers
SECURE_BROWSER_XSS_FILTER = True     
SESSION_COOKIE_HTTPONLY = True         
CSRF_COOKIE_HTTPONLY = True           


# Password validation rules
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', # prevent passwords similar to user info
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', 
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', 
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', 
    },
]

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR/"media"


# Language and timezone
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# Default primary key type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
